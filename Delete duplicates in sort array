26. 删除排序数组中的重复项
来源：https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/solution/
问题描述：
给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。
不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。

示例1：
给定数组 nums = [1,1,2], 函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。
你不需要考虑数组中超出新长度后面的元素。

解法：
function removeDuplicates(nums){
  //如果数组nums为空或长度为0时，直接返回0
  if(nums == null || nums.length == 0) return 0;
  var i = 0;
  var j = 1;
  while(j < nums.length){
    if(nums[i] != nums[j]){
      nums[ i + 1] = nums[j];
     i++;
    }
    j++;
  }
return i+1;
}

思路：
利用快慢指针
数组nums在排序后，初始化指针i和第二位指针j相差1，每次在循环内比较nums[i]与nums[j],如果nums[i]等于nums[j]则位置不变，
否则将nums[j]移动下一位，直到nums[i]不等于nums[j]，把nums[j]赋给nums[i+1],再递增i,重复这一过程，把下一个nums[j]再比较，
直到j大于nums数组长度，跳出循环，最后返回i+1的值
