问题描述：给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。

示例 1:

输入: [1,2,3,4,5,6,7] 和 k = 3
输出: [5,6,7,1,2,3,4]
解释:
向右旋转 1 步: [7,1,2,3,4,5,6]
向右旋转 2 步: [6,7,1,2,3,4,5]
向右旋转 3 步: [5,6,7,1,2,3,4]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/rotate-array

解法：暴力解法
/**
 * @param {number[]} nums
 * @param {number} k
 * @return {void} Do not return anything, modify nums in-place instead.
 */
var rotate = function(nums, k) {
    var temp,previous;
  for(var i=0;i<k;i++){
    previous = nums[nums.length-1];
    for(var j=0;j<nums.length;j++){
      temp=nums[j];
      nums[j]=previous;
      previous=temp;
    }
  }
};

思路：以k数字作为计数器，数组每次循环数组元素最后一位保存在变量temp中，依次移每个动数组元素位置到下一位，temp保存的值赋给数组第一位元素，直到k次结束。
